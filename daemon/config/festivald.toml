#================#
# festivald.toml #
#=============================================================================#
# This is `festivald`'s config file.                                          #
# It is in the TOML (https://en.wikipedia.org/wiki/TOML) format.              #
#                                                                             #
# Values will be loaded from this file on startup.                            #
# If overlapping `--command-flags` are provided, they will be used instead.   #
#                                                                             #
# For full documentation on config options, see:                              #
# <https://github.com/hinto-janai/festival/tree/main/daemon/README.md#Config> #
#=============================================================================#


#----------------------------------------------------------#
#                         NETWORK                          #
#----------------------------------------------------------#
# The IPv4 address `festivald` will bind to.
#
# DEFAULT | "127.0.0.1"
# EXAMPLE | "192.168.2.10", "0.0.0.0"
# TYPE    | IPv4 string
ip = "127.0.0.1"

# The port `festivald` bind to.
#
# DEFAULT | 18425
# EXAMPLE | 15000, 8080, 9999
# TYPE    | 16-bit unsigned integer (0..65535)
port = 18425

# The max amount of connections `festivald`
# will serve at any given moment.
# `0` means unlimited.
#
# DEFAULT | 0
# EXAMPLE | 100, 1000, 10000, 100000
# TYPE    | unsigned integer
max_connections = 0

# `festivald` will only serve connections coming
# from these IPs. An empty array `[]` or an array
# containing "0.0.0.0" will serve all IP ranges.
#
# DEFAULT | []
# EXAMPLE | ["127.0.0.1", "192.168.2.10", "13.248.169.48"]
# TYPE    | array of IPv4 addresses
exclusive_ips = []

# Upon a failed, potentially malicious request, instead of
# immediately responding, `festivald` will randomly sleep
# up to this many milliseconds before responding to the connection.
#
# This includes:
#   - Authentication failure
#   - IPs not in the `exclusive_ips` list
#   - IPv6 connections
#
# If 0, `festivald` will immediately respond. This may
# not be wanted to due potential DoS and timing attacks.
#
# If you're hosting locally (127.0.0.1), you can set this
# to 0 (unless you don't trust your local network?).
#
# DEFAULT | 3000
# EXAMPLE | 0, 1000, 3000, 10000, 300000
# TYPE    | unsigned integer
sleep_on_fail = 3000


#----------------------------------------------------------#
#                           TLS                            #
#----------------------------------------------------------#
# Enable/disable HTTPS.
#
# You must also provide a PEM-formatted X509 certificate and key
# in the below options for this to work.
#
# DEFAULT | false
# VALUES  | true, false
# TYPE    | boolean
tls = false

# The PEM-formatted X509 certificate used for TLS.
#
# DEFAULT | ""
# EXAMPLE | "/my/path/to/cert.pem"
# TYPE    | PATH string
certificate = ""

# The PEM-formatted key for the above X509 certificate.
#
# DEFAULT | ""
# EXAMPLE | "/my/path/to/key.pem"
# TYPE    | PATH string
key = ""


#----------------------------------------------------------#
#                           API                            #
#----------------------------------------------------------#
# Enable/disable the REST API.
# This is responsible for the `/rest` API that
# serves image, audio, and other heavy resource data.
#
# Setting this to `false` will disable this part
# of the system, and will only leave the JSON-RPC
# API available.
#
# DEFAULT | true
# VALUES  | true, false
# TYPE    | boolean
rest = true

# Enable/disable direct downloads via the REST API.
#
# By default, accessing the REST API via a browser
# will open the resource in the browser (audio player,
# image viewer, etc)
#
# Setting this to true will make browsers download
# the file directly, without opening it.
#
# DEFAULT | false
# VALUES  | true, false
# TYPE    | boolean
direct_download = false


#----------------------------------------------------------#
#                         LOGGING                          #
#----------------------------------------------------------#
# The logging level `festivald` will use.
#
# DEFAULT | "info"
# VALUES  | "off", "error", "warn", "info", "debug", "trace"
# TYPE    | string, one of the above
log_level = "info"

# Only show logs for `festivald` and don't show
# anything related to the internals, `shukusai`.
#
# DEFAULT | false
# VALUES  | true, false
# TYPE    | boolean
log_daemon_only = false


#----------------------------------------------------------#
#                   FILESYSTEM WATCHING                    #
#----------------------------------------------------------#
# Enable/disable watching the filesystem for signals
#
# Other than RPC calls, `festivald` can send signals
# to another local `festivald`, e.g:
# `./festivald --play`
#
# The way this is done is by creating a file
# in Festival's `signal` directory.
#
# `./festivald --FLAG` just creates a file in that directory,
# which an existing Festival will notice and do the appropriate task.
#
# Setting this to `false` will disable that part of the system so that
# filesystem signals won't work, e.g, `./festivald --play` will not work.
#
# DEFAULT | true
# VALUES  | true, false
# TYPE    | boolean
watch = true


#----------------------------------------------------------#
#                      MEDIA CONTROLS                      #
#----------------------------------------------------------#
# Enable/disable OS media controls
#
# `festivald` plugs into the native OS's media controls so that signals
# like `play/pause/stop` and/or keyboard controls can be processed.
#
# Setting this to `false` will disable media controls.
#
# DEFAULT | true
# VALUES  | true, false
# TYPE    | boolean
media_controls = true


#----------------------------------------------------------#
#                      AUTHORIZATION                       #
#----------------------------------------------------------#
# Only process connections to `festivald` that have a
# "authorization" HTTP header with this username and password.
#
# TLS must be enabled for this feature to work
# or `festivald` will refuse to start.
#
# This value must be:
#   1. The "username"
#   2. Followed by a single colon ":"
#   3. Then the "password", e.g:
# ```
# curl -u my_user:my_password https://127.0.0.1:18425
# ```
# or the equivalent wget command:
# ```
# wget --user my_user --password my_password https://localhost:18425
# ```
#
# An empty string disables this feature.
#
# DEFAULT | "" (disabled)
# EXAMPLE | "my_username:my_password", "my_username:aoig2A%^$AWS^%",
# TYPE    | string
authorization = ""
