#================#
# festivald.toml #
#=============================================================================#
# This is `festivald`'s config file.                                          #
# It is in the TOML (https://en.wikipedia.org/wiki/TOML) format.              #
#                                                                             #
# Values will be loaded from this file on startup.                            #
# If overlapping `--command-flags` are provided, they will be used instead.   #
#                                                                             #
# For full documentation on config options, see:                              #
# <https://github.com/hinto-janai/festival/tree/main/daemon/README.md#Config> #
#=============================================================================#


#----------------------------------------------------------#
#                         NETWORK                          #
#----------------------------------------------------------#
# The IPv4 address `festivald` will bind to.
#
# DEFAULT | "127.0.0.1"
# EXAMPLE | "192.168.2.10", "0.0.0.0"
# TYPE    | string
ip = "127.0.0.1"

# The port `festivald` bind to.
#
# DEFAULT | 18425
# EXAMPLE | 15000, 8080
# TYPE    | 16-bit unsigned integer (0..65535)
port = 18425

#----------------------------------------------------------#
#                         THREADS                          #
#----------------------------------------------------------#
# The amount of threads `festivald` will
# use for handling JSON-RPC requests.
# `0` will spawn as many system threads you have.
#
# DEFAULT | 0
# EXAMPLE | 2, 4, 5, 6, 7, 8, 16
# TYPE    | unsigned integer
threads_rpc = 0

# The amount of threads `festivald` will
# use for handling REST resource requests (audio, images).
# `0` will spawn as many system threads you have.
#
# DEFAULT | 0
# EXAMPLE | 2, 4, 5, 6, 7, 8, 16
# TYPE    | unsigned integer
threads_rest = 0

#----------------------------------------------------------#
#                           API                            #
#----------------------------------------------------------#
# Enable/disable the REST API.
# This is responsible for the `/rest` API that
# serves image, audio, and other heavy resource data.
#
# Setting this to `false` will disable this part
# of the system, and will only leave the JSON-RPC
# API available.
#
# DEFAULT | true
# VALUES  | true, false
# TYPE    | boolean
rest = true

#----------------------------------------------------------#
#                         LOGGING                          #
#----------------------------------------------------------#
# The logging level `festivald` will use.
#
# DEFAULT | "info"
# VALUES  | "off", "error", "warn", "info", "debug", "trace"
# TYPE    | string
log_level = "info"

# Only show logs for `festivald` and don't show
# anything related to the internals, `shukusai`.
#
# DEFAULT | false
# VALUES  | true, false
# TYPE    | boolean
log_daemon_only = false

#----------------------------------------------------------#
#                   FILESYSTEM WATCHING                    #
#----------------------------------------------------------#
# Enable/disable watching the filesystem for signals
#
# Other than RPC calls, `festivald` can send signals
# to another local `festivald`, e.g:
# `./festivald --play`
#
# The way this is done is by creating a file
# in Festival's `signal` directory.
#
# `./festivald --FLAG` just creates a file in that directory,
# which an existing Festival will notice and do the appropriate task.
#
# Setting this to `false` will disable that part of the system so that
# filesystem signals won't work, e.g, `./festivald --play` will not work.
#
# DEFAULT | true
# VALUES  | true, false
# TYPE    | boolean
watch = true

#----------------------------------------------------------#
#                      MEDIA CONTROLS                      #
#----------------------------------------------------------#
# Enable/disable OS media controls
#
# `festivald` plugs into the native OS's media controls so that signals
# like `play/pause/stop` and/or keyboard controls can be processed.
#
# Setting this to `false` will disable media controls.
#
# DEFAULT | true
# VALUES  | true, false
# TYPE    | boolean
media_controls = true

#----------------------------------------------------------#
#                         PASSWORD                         #
#----------------------------------------------------------#
# Only process `festivald` connections to
# `festivald` that have this password.
# Empty password disables this feature.
# By default, this is sent in clear-text via HTTP.
# Do not expect this to be anything more
# than a small security measure.
#
# DEFAULT | "" (disabled)
# EXAMPLE | "my_password_123", "aoig2A%^$AWS^%",
# TYPE    | string
password = ""
