# This clippys, docs, tests, builds.

name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: "full"

jobs:
  ci:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [windows-2019, macos-11, ubuntu-20.04]
        build: [dev, release]

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Cache
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo
          target
        key: ${{ matrix.os }}-${{ matrix.build }}

    - name: Install dependencies
      run: |
        rustup update
        if [ "$RUNNER_OS" == "Linux" ]; then
          sudo apt update
          sudo apt install -y libgtk-3-dev libasound2-dev libjack-dev libpulse-dev
        fi
      shell: bash

    - name: Clippy
      run: cargo clippy --workspace --profile ${{ matrix.build }}

    - name: Doc
      run: cargo doc --workspace --no-deps --profile ${{ matrix.build }}
      env:
        RUSTFLAGS: -Awarnings

# FIXME
#    - name: Test
#      run: cargo test --workspace --profile ${{ matrix.build }}

    - name: Build
      shell: bash
      run: |
        # ARM builds.
        if [ "$RUNNER_OS" == "macOS" ]; then
          cargo build --workspace --profile ${{ matrix.build }} --target aarch64-apple-darwin
        fi
        cargo build --workspace --profile ${{ matrix.build }}

    - name: Compress
      shell: bash
      run: |
        VERSION="$(grep -m1 "version" Cargo.toml | grep -o "[0-9].[0-9].[0-9]")"
        if [ "$RUNNER_OS" == "Linux" ]; then
          tar -czpf "festival-${VERSION}-linux-x64.tar.gz" "target/release/festival" --owner=hinto --group=hinto
        elif [ "$RUNNER_OS" == "macOS" ]; then
          tar -czpf "festival-${VERSION}-macos-x64.tar.gz" "target/release/festival" --owner=hinto --group=hinto
          tar -czpf "festival-${VERSION}-macos-arm64.tar.gz" "target/aarch64-apple-darwin/release/festival" --owner=hinto --group=hinto
        elif [ "$RUNNER_OS" == "Windows" ]; then
          mv "target/release/festival.exe" "target/release/Festival.exe"
          zip -qr "festival-${VERSION}-windows-x64.zip" "target/release/Festival.exe"
        fi

    - name: Archive (debug)
      uses: actions/upload-artifact@v3
      with:
        name: festival-debug-${{ matrix.os }}
        path: festival*

    - name: Archive (release)
      uses: actions/upload-artifact@v3
      with:
        name: festival-release-${{ matrix.os }}
        path: festival*
